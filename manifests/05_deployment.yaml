apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    exclude.release.openshift.io/internal-openshift-hosted: "true"
  name: prometheus-k8s
  namespace: openshift-cloud-credential-operator
rules:
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  - pods
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: cloud-credential-operator-role
rules:
- apiGroups:
  - cloudcredential.openshift.io
  resources:
  - credentialsrequests
  - credentialsrequests/status
  - credentialsrequests/finalizers
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - secrets
  - configmaps
  - events
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - config.openshift.io
  resources:
  - clusterversions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - config.openshift.io
  resources:
  - infrastructures
  - dnses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - config.openshift.io
  resources:
  - clusteroperators
  - clusteroperators/status
  verbs:
  - create
  - get
  - update
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: prometheus-k8s
  namespace: openshift-cloud-credential-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: prometheus-k8s
subjects:
- kind: ServiceAccount
  name: prometheus-k8s
  namespace: openshift-monitoring
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: null
  name: cloud-credential-operator-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cloud-credential-operator-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: openshift-cloud-credential-operator
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    config.openshift.io/inject-trusted-cabundle: "true"
  name: cco-trusted-ca
  namespace: openshift-cloud-credential-operator
---
apiVersion: v1
kind: Service
metadata:
  name: cco-metrics
  namespace: openshift-cloud-credential-operator
spec:
  ports:
  - name: cco-metrics
    port: 2112
    protocol: TCP
    targetPort: 2112
  selector:
    app: cloud-credential-operator
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
    controller-tools.k8s.io: "1.0"
  name: controller-manager-service
  namespace: openshift-cloud-credential-operator
spec:
  ports:
  - port: 443
  selector:
    control-plane: controller-manager
    controller-tools.k8s.io: "1.0"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    config.openshift.io/inject-proxy: manager
  labels:
    control-plane: controller-manager
    controller-tools.k8s.io: "1.0"
  name: cloud-credential-operator
  namespace: openshift-cloud-credential-operator
spec:
  replicas: 1
  revisionHistoryLimit: 4
  selector:
    matchLabels:
      control-plane: controller-manager
      controller-tools.k8s.io: "1.0"
  template:
    metadata:
      labels:
        app: cloud-credential-operator
        control-plane: controller-manager
        controller-tools.k8s.io: "1.0"
    spec:
      containers:
      - args:
        - |
          if [ -s /var/run/configmaps/trusted-ca-bundle/tls-ca-bundle.pem ]; then
              echo "Copying system trust bundle"
              cp -f /var/run/configmaps/trusted-ca-bundle/tls-ca-bundle.pem /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem
          fi
          exec /root/manager --log-level=debug
        command:
        - /bin/bash
        - -ec
        env:
        - name: RELEASE_VERSION
          value: 0.0.1-snapshot
        image: quay.io/openshift/origin-cloud-credential-operator:latest
        imagePullPolicy: IfNotPresent
        name: manager
        ports:
        - containerPort: 9876
          name: webhook-server
          protocol: TCP
        resources:
          requests:
            cpu: 10m
            memory: 150Mi
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/configmaps/trusted-ca-bundle
          name: cco-trusted-ca
      nodeSelector:
        node-role.kubernetes.io/master: ""
      priorityClassName: system-cluster-critical
      terminationGracePeriodSeconds: 10
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Exists
      - effect: NoExecute
        key: node.kubernetes.io/unreachable
        operator: Exists
        tolerationSeconds: 120
      - effect: NoExecute
        key: node.kubernetes.io/not-ready
        operator: Exists
        tolerationSeconds: 120
      volumes:
      - configMap:
          items:
          - key: ca-bundle.crt
            path: tls-ca-bundle.pem
          name: cco-trusted-ca
          optional: true
        name: cco-trusted-ca
---
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: cloud-credential-operator-alerts
  namespace: openshift-cloud-credential-operator
spec:
  groups:
  - name: CloudCredentialOperator
    rules:
    - alert: CCOTargetNamespaceMissing
      annotations:
        summary: CredentialsRequest(s) pointing to non-existant namespace
      expr: cco_credentials_requests_conditions{condition="MissingTargetNamespace"}
        > 0
      for: 5m
      labels:
        severity: warning
    - alert: CCOProvisioningFailed
      annotations:
        summary: CredentialsRequest(s) unable to be fulfilled
      expr: cco_credentials_requests_conditions{condition="CredentialsProvisionFailure"}
        > 0
      for: 5m
      labels:
        severity: warning
    - alert: CCODeprovisioningFailed
      annotations:
        summary: CredentialsRequest(s) unable to be cleaned up
      expr: cco_credentials_requests_conditions{condition="CredentialsDeprovisionFailure"}
        > 0
      for: 5m
      labels:
        severity: warning
    - alert: CCOInsufficientCloudCreds
      annotations:
        summary: Cluster's cloud credentials insufficient for minting or passthrough
      expr: cco_credentials_requests_conditions{condition="InsufficientCloudCreds"}
        > 0
      for: 5m
      labels:
        severity: warning
    - alert: CCOperatorDown
      annotations:
        summary: cloud-credential-operator pod not running
      expr: absent(up{job="cco-metrics"} == 1)
      for: 5m
      labels:
        severity: critical
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: cloud-credential-operator
  namespace: openshift-cloud-credential-operator
spec:
  endpoints:
  - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    interval: 30s
    port: cco-metrics
    scheme: http
    tlsConfig:
      caFile: /etc/prometheus/configmaps/serving-certs-ca-bundle/service-ca.crt
      serverName: cco.openshift-cloud-credential-operator.svc
  namespaceSelector:
    matchNames:
    - openshift-cloud-credential-operator
  selector: {}
